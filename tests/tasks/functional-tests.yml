---
# Test if server blocks actually work by simulating a request from a browser

- name: make request for index of http server block
  uri:
               url="http://{{ item }}/index.html"
    return_content=yes
    validate_certs=no
  with_items:
    - barc-nginx-test-centos-http.v.m
    - barc-nginx-test-ubuntu-http.v.m
  changed_when: false
  register: nginx_test_fact_http_index_request_details
  when: test_http_server_block == true
- name: assert request for index of http server block was successful and with correct headers
  assert:
    that:
      - "item.status == 200"
      - "'Test Page' in item.content"
      - "item.cache_control is defined"
      - "'no-cache' in item.cache_control"
  with_items: nginx_test_fact_http_index_request_details.results
  when: test_http_server_block == true

- name: make request for static file from http server block
  uri:
               url="http://{{ item }}/normalise.css"
    return_content=no
    validate_certs=no
  with_items:
    - barc-nginx-test-centos-http.v.m
    - barc-nginx-test-ubuntu-http.v.m
  changed_when: false
  register: nginx_test_fact_http_static_file_request_details
  when: test_http_server_block == true
- name: assert request for static file from http server block was successful and with correct headers
  assert:
    that:
      - "item.status == 200"
      - "item.cache_control is defined"
      - "'max-age=31536000' in item.cache_control"
      - "'public' in item.cache_control"
  with_items: nginx_test_fact_http_static_file_request_details.results
  when: test_http_server_block == true

- name: make request for index of https server block
  uri:
               url="https://{{ item }}/index.html"
    return_content=yes
    validate_certs=no
  with_items:
    - barc-nginx-test-centos-https.v.m
    - barc-nginx-test-ubuntu-https.v.m
  changed_when: false
  register: nginx_test_fact_https_index_request_details
  when: test_https_server_block == true
- name: assert request for index of https server block was successful and with correct headers
  assert:
    that:
      - "item.status == 200"
      - "'Test Page' in item.content"
      - "item.strict_transport_security is defined"
      - "item.cache_control is defined"
      - "'no-cache' in item.cache_control"
  with_items: nginx_test_fact_https_index_request_details.results
  when: test_https_server_block == true

- name: make request for static file from https server block
  uri:
               url="https://{{ item }}/normalise.css"
    return_content=no
    validate_certs=no
  with_items:
    - barc-nginx-test-centos-https.v.m
    - barc-nginx-test-ubuntu-https.v.m
  changed_when: false
  register: nginx_test_fact_https_static_file_request_details
  when: test_https_server_block == true
- name: assert request for static file from https server block was successful and with correct headers
  assert:
    that:
      - "item.status == 200"
      - "item.strict_transport_security is defined"
      - "item.cache_control is defined"
      - "'max-age=31536000' in item.cache_control"
      - "'public' in item.cache_control"
  with_items: nginx_test_fact_https_static_file_request_details.results
  when: test_https_server_block == true

- name: make request for index of http server block which redirects to https without following redirect
  uri:
                 url="http://{{ item }}/index.html"
    follow_redirects=none
         status_code=301
  with_items:
    - barc-nginx-test-centos-http-to-https.v.m
    - barc-nginx-test-ubuntu-http-to-https.v.m
  changed_when: false
  register: nginx_test_fact_http_to_https_index_request_details_without_redirect
  when: test_http_to_https_server_block == true
- name: assert request for index of http server block which redirects to https without following redirects generates a redirect
  assert:
    that:
      - "item.status == 301"
      - "item.location is defined"
      - "'https://' in item.location"
  with_items: nginx_test_fact_http_to_https_index_request_details_without_redirect.results
  when: test_http_to_https_server_block == true

- name: make request for index of http server block which redirects to https again following redirects
  uri:
               url="http://{{ item }}/index.html"
    return_content=yes
    validate_certs=no
  with_items:
    - barc-nginx-test-centos-http-to-https.v.m
    - barc-nginx-test-ubuntu-http-to-https.v.m
  changed_when: false
  register: nginx_test_fact_http_to_https_index_request_details_with_redirect
  when: test_http_to_https_server_block == true
- name: assert request for index of http server block which redirects to https following redirects was successful and with correct headers
  assert:
    that:
      - "item.status == 200"
      - "'Test Page' in item.content"
      - "item.strict_transport_security is defined"
      - "item.cache_control is defined"
      - "'no-cache' in item.cache_control"
  with_items: nginx_test_fact_http_to_https_index_request_details_with_redirect.results
  when: test_http_to_https_server_block == true
